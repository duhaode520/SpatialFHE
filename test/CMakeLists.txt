cmake_minimum_required(VERSION 3.10)

include_directories(../src)
link_directories(../src)
#动态插入Gtest 代码
#这一段取自 https://google.github.io/googletest/quickstart-cmake.html
#其中zip 的hash值根据 googletest github 上release 版本选取
include(FetchContent)
FetchContent_Declare(
  googletest
  URL https://github.com/google/googletest/archive/03597a01ee50ed33e9dfd640b249b4be3799d395.zip
)
# For Windows: Prevent overriding the parent project's compiler/linker settings
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
FetchContent_MakeAvailable(googletest)
enable_testing()


#这里创建了一个TestAll选项
add_executable(seal_test InitSuite.cu FsManagerSuite.cpp SealCryptoSuite.cu)
target_link_libraries(seal_test PRIVATE gtest_main SpatialFHE SEAL::seal ZLIB::ZLIB zstd::libzstd unofficial::b64::b64 rapidjson)

add_executable(phantom_test PhantomCryptoSuite.cu)
target_link_libraries(phantom_test PRIVATE gtest_main SpatialFHE SEAL::seal ZLIB::ZLIB zstd::libzstd unofficial::b64::b64 rapidjson)
target_compile_options(phantom_test PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:--default-stream per-thread>)
target_compile_options(phantom_test PRIVATE $<$<AND:$<CONFIG:Debug>,$<COMPILE_LANGUAGE:CUDA>>:-G;-src-in-ptx>)

#add_executable(spatialfhe_test SealSpatialFHEManagerSuite.cu PhantomSpatialFHEManagerSuite.cu)
add_executable(spatialfhe_test PhantomSpatialFHEManagerSuite.cu)
target_link_libraries(spatialfhe_test PRIVATE gtest_main SpatialFHE SEAL::seal ZLIB::ZLIB zstd::libzstd unofficial::b64::b64 rapidjson)
target_compile_options(spatialfhe_test PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:--default-stream per-thread>)
target_compile_options(spatialfhe_test PRIVATE $<$<AND:$<CONFIG:Debug>,$<COMPILE_LANGUAGE:CUDA>>:-G;-src-in-ptx>)

add_executable(concrete_test ConcreteDemoSuite.cpp)

target_link_libraries(concrete_test PRIVATE gtest_main)

file(GLOB_RECURSE CONCRETE_STATIC_LIBS ${CONCRETE_COMPILER_BUILD_DIR}/install/concretecompiler/lib/*.a)
file(GLOB_RECURSE CONCRETE_DYNAMIC_LIBS ${CONCRETE_COMPILER_BUILD_DIR}/install/concretecompiler/lib/*.so)
# 排除 CONCRETE_STATIC_LIBS 中 LLVM 的库
list(FILTER CONCRETE_STATIC_LIBS EXCLUDE REGEX ".*libLLVM.*")

set(dialect_libs "MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineTransforms;MLIRAffineTransformOps;MLIRAffineUtils;MLIRAMDGPUDialect;MLIRArithDialect;MLIRArithTransforms;MLIRArithUtils;MLIRArmNeonDialect;MLIRArmSVEDialect;MLIRArmSVETransforms;MLIRAsyncDialect;MLIRAsyncTransforms;MLIRAMXDialect;MLIRAMXTransforms;MLIRBufferizationDialect;MLIRBufferizationTransformOps;MLIRBufferizationTransforms;MLIRComplexDialect;MLIRControlFlowDialect;MLIRDLTIDialect;MLIREmitCDialect;MLIRFuncDialect;MLIRFuncTransforms;MLIRGPUOps;MLIRGPUTransforms;MLIRGPUTransformOps;MLIRIndexDialect;MLIRLinalgFrontend;MLIRLinalgDialect;MLIRLinalgTransformOps;MLIRLinalgTransforms;MLIRLinalgUtils;MLIRLLVMIRTransforms;MLIRLLVMDialect;MLIRNVVMDialect;MLIRROCDLDialect;MLIRMathDialect;MLIRMathTransforms;MLIRMemRefDialect;MLIRMemRefTransformOps;MLIRMemRefTransforms;MLIRMLProgramDialect;MLIRNVGPUDialect;MLIRNVGPUUtils;MLIRNVGPUTransforms;MLIROpenACCDialect;MLIROpenMPDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFTransformOps;MLIRSCFTransforms;MLIRSCFUtils;MLIRShapeDialect;MLIRShapeOpsTransforms;MLIRSparseTensorDialect;MLIRSparseTensorTransforms;MLIRSparseTensorPipelines;MLIRSparseTensorUtils;MLIRSPIRVDialect;MLIRSPIRVModuleCombiner;MLIRSPIRVConversion;MLIRSPIRVTransforms;MLIRSPIRVUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorTransforms;MLIRTensorUtils;MLIRTosaDialect;MLIRTosaTransforms;MLIRTransformDialect;MLIRTransformDialectTransforms;MLIRTransformDialectUtils;MLIRVectorDialect;MLIRVectorTransforms;MLIRVectorTransformOps;MLIRVectorUtils;MLIRX86VectorDialect;MLIRX86VectorTransforms;MLIRTestDynDialect;MLIRTosaTestPasses;FHELinalgDialect;FHEInterfaces;FHEDialect;TFHEDialect;ConcreteDialect;ConcretelangConcreteTransforms;RTDialect;RTDialectTransforms;ConcretelangSDFGInterfaces;SDFGDialect;ConcretelangSDFGTransforms;TracingDialect;TracingDialectTransforms;TypeInferenceDialect;OptimizerDialect;FHEToTFHEScalar;FHEToTFHECrt;TFHEGlobalParametrization;TFHEKeyNormalization;SimulateTFHE;TFHEToConcrete;FHETensorOpsToLinalg;TracingToCAPI;ConcreteToCAPI;SDFGToStreamEmulator;MLIRLowerableDialectsToLLVM;LinalgExtras;ExtractSDFGOps")
set(conversion_libs "MLIRAffineToStandard;MLIRAMDGPUToROCDL;MLIRArithAttrToLLVMConversion;MLIRArithToLLVM;MLIRArithToSPIRV;MLIRArmNeon2dToIntr;MLIRAsyncToLLVM;MLIRBufferizationToMemRef;MLIRComplexToLLVM;MLIRComplexToLibm;MLIRComplexToStandard;MLIRControlFlowToLLVM;MLIRControlFlowToSPIRV;MLIRFuncToLLVM;MLIRFuncToSPIRV;MLIRGPUToGPURuntimeTransforms;MLIRGPUToNVVMTransforms;MLIRGPUToROCDLTransforms;MLIRGPUToSPIRV;MLIRGPUToVulkanTransforms;MLIRIndexToLLVM;MLIRLinalgToLLVM;MLIRLinalgToStandard;MLIRLLVMCommonConversion;MLIRMathToFuncs;MLIRMathToLibm;MLIRMathToLLVM;MLIRMathToSPIRV;MLIRMemRefToLLVM;MLIRMemRefToSPIRV;MLIRNVGPUToNVVM;MLIROpenACCToLLVM;MLIROpenACCToSCF;MLIROpenMPToLLVM;MLIRPDLToPDLInterp;MLIRReconcileUnrealizedCasts;MLIRSCFToControlFlow;MLIRSCFToGPU;MLIRSCFToOpenMP;MLIRSCFToSPIRV;MLIRShapeToStandard;MLIRSPIRVToLLVM;MLIRTensorToLinalg;MLIRTensorToSPIRV;MLIRTosaToArith;MLIRTosaToLinalg;MLIRTosaToSCF;MLIRTosaToTensor;MLIRVectorToLLVM;MLIRVectorToGPU;MLIRVectorToSCF;MLIRVectorToSPIRV")
set(translation_libs "MLIRTargetCpp;MLIRSPIRVDeserialization;MLIRSPIRVSerialization;MLIRSPIRVBinaryUtils;MLIRSPIRVTranslateRegistration;MLIRArmNeonToLLVMIRTranslation;MLIRArmSVEToLLVMIRTranslation;MLIRAMXToLLVMIRTranslation;MLIRLLVMIRToLLVMTranslation;MLIRLLVMToLLVMIRTranslation;MLIRNVVMToLLVMIRTranslation;MLIROpenACCToLLVMIRTranslation;MLIROpenMPToLLVMIRTranslation;MLIRROCDLToLLVMIRTranslation;MLIRX86VectorToLLVMIRTranslation;MLIRTargetLLVMIRExport;MLIRToLLVMIRTranslationRegistration;MLIRTargetLLVMIRImport;MLIRFromLLVMIRTranslationRegistration")
set(supplement_mlir_libs "MLIRLoopLikeInterface;MLIRDataLayoutInterfaces;MLIRAnalysis;MLIRSupportIndentedOstream;MLIRRuntimeVerifiableOpInterface;MLIRParser;MLIRExecutionEngine;MLIRCopyOpInterface;MLIRMaskableOpInterface;MLIRBytecodeWriter;MLIRExecutionEngineUtils;MLIRCallInterfaces;MLIRCAPITransforms;MLIRPresburger;MLIRDialectUtils;MLIRInferIntRangeCommon;MLIRCAPIIR;MLIRShapedOpInterfaces;MLIRTilingInterface;MLIRViewLikeInterface;MLIRDialect;MLIRSideEffectInterfaces;MLIRAsmParser;MLIRParallelCombiningOpInterface;MLIRTblgenLib;MLIRInferIntRangeInterface;MLIRSparseTensorRuntime;MLIRVectorInterfaces;MLIRTableGen;MLIRTranslateLib;MLIRInferTypeOpInterface;MLIRBytecodeReader;MLIRSupport;MLIRMaskingOpInterface;MLIRDestinationStyleOpInterface;MLIRTransformUtils;MLIRCAPIRegisterEverything;MLIRPass;MLIRCastInterfaces;MLIRControlFlowInterfaces;MLIRRewrite")
set(supplement_llvm_libs "LLVMMCJIT;LLVMFrontendOpenACC;LLVMOption;LLVMTransformUtils;LLVMX86Disassembler;LLVMLinker;LLVMFrontendOpenMP;LLVMGlobalISel;LLVMDebugInfoGSYM;LLVMLibDriver;LLVMInstrumentation;LLVMLTO;LLVMScalarOpts;LLVMAggressiveInstCombine;LLVMObjCopy;LLVMTextAPI;LLVMObject;LLVMTableGenGlobalISel;LLVMX86CodeGen;LLVMOrcJIT;LLVMRemarks;LLVMObjectYAML;LLVMDlltoolDriver;LLVMExecutionEngine;LLVMExtensions;LLVMCoroutines;LLVMSymbolize;LLVMDWARFLinker;LLVMIRReader;LLVMCoverage;LLVMSupport;LLVMIRPrinter;LLVMAsmParser;LLVMMCA;LLVMDebugInfoLogicalView;LLVMFrontendHLSL;LLVMCFGuard;LLVMDebugInfoCodeView;LLVMBinaryFormat;LLVMMCParser;LLVMX86Desc;LLVMDebugInfoMSF;LLVMXRay;LLVMBitWriter;LLVMCodeGen;LLVMInterpreter;LLVMTableGen;LLVMTargetParser;LLVMObjCARCOpts;LLVMBitstreamReader;LLVMMIRParser;LLVMAnalysis;LLVMMCDisassembler;LLVMMC;LLVMWindowsManifest;LLVMPasses;LLVMipo;LLVMSelectionDAG;LLVMJITLink;LLVMOrcShared;LLVMFuzzMutate;LLVMDebugInfoPDB;LLVMX86Info;LLVMRuntimeDyld;LLVMDWARFLinkerParallel;LLVMBitReader;LLVMX86TargetMCA;LLVMDemangle;LLVMWindowsDriver;LLVMAsmPrinter;LLVMFileCheck;LLVMCore;LLVMOrcTargetProcess;LLVMProfileData;LLVMInterfaceStub;LLVMDWP;LLVMX86AsmParser;LLVMTarget;LLVMFuzzerCLI;LLVMVectorize;LLVMDebugInfoDWARF;LLVMInstCombine;LLVMLineEditor")
set(supplement_concrete_libs "ConcreteDialectAnalysis;ConcretelangCommon;ConcretelangInterfaces;concrete-protocol;ConcretelangClientLib;concrete_optimizer_cpp;ConcretelangServerLib;concrete_optimizer;ConcretelangConversion")
set(other_libs "LLVMMCJIT;LLVMFrontendOpenACC;LLVMOption;MLIRLoopLikeInterface;LLVMTransformUtils;MLIRDataLayoutInterfaces;MLIRAnalysis;LLVMX86Disassembler;MLIRSPIRVSerialization;ConcreteDialectAnalysis;MLIRSupportIndentedOstream;LLVMLinker;capnp;LLVMFrontendOpenMP;LLVMGlobalISel;MLIRRuntimeVerifiableOpInterface;MLIRParser;ConcretelangCommon;LLVMDebugInfoGSYM;MLIRArmNeonToLLVMIRTranslation;LLVMLibDriver;MLIRExecutionEngine;ConcretelangInterfaces;MLIRCopyOpInterface;MLIRROCDLToLLVMIRTranslation;MLIRFromLLVMIRTranslationRegistration;MLIRMaskableOpInterface;LLVMInstrumentation;LLVMLTO;LLVMScalarOpts;MLIRBytecodeWriter;MLIRSPIRVTranslateRegistration;MLIRExecutionEngineUtils;LLVMAggressiveInstCombine;LLVMObjCopy;MLIRSPIRVDeserialization;MLIRCallInterfaces;LLVMTextAPI;MLIROpenMPToLLVMIRTranslation;LLVMObject;LLVMTableGenGlobalISel;LLVMX86CodeGen;LLVMOrcJIT;MLIROpenACCToLLVMIRTranslation;LLVMRemarks;LLVMObjectYAML;LLVMDlltoolDriver;MLIRTargetLLVMIRExport;LLVMExecutionEngine;LLVMExtensions;MLIRArmSVEToLLVMIRTranslation;LLVMCoroutines;concrete-protocol;LLVMSymbolize;LLVMDWARFLinker;LLVMIRReader;LLVMCoverage;LLVMSupport;ConcretelangClientLib;LLVMIRPrinter;MLIRCAPITransforms;LLVMAsmParser;LLVMMCA;LLVMDebugInfoLogicalView;MLIRPresburger;LLVMFrontendHLSL;LLVMCFGuard;MLIRDialectUtils;LLVMDebugInfoCodeView;concrete_optimizer_cpp;capnp-json;LLVMBinaryFormat;LLVMMCParser;TFHEDialectAnalysis;MLIRInferIntRangeCommon;LLVMX86Desc;FHELinalgDialectTransforms;LLVMDebugInfoMSF;MLIRCAPIIR;LLVMXRay;LLVMBitWriter;LLVMCodeGen;MLIRShapedOpInterfaces;LLVMInterpreter;LLVMTableGen;MLIRTilingInterface;MLIRViewLikeInterface;AnalysisUtils;LLVMTargetParser;MLIRDialect;LLVMObjCARCOpts;MLIRSideEffectInterfaces;LLVMBitstreamReader;LLVMMIRParser;MLIRAsmParser;MLIRX86VectorToLLVMIRTranslation;MLIRParallelCombiningOpInterface;MLIRTblgenLib;LLVMAnalysis;LLVMMCDisassembler;MLIRInferIntRangeInterface;MLIRAMXToLLVMIRTranslation;MLIRSparseTensorRuntime;MLIRVectorInterfaces;MLIRTableGen;MLIRTranslateLib;LLVMMC;LLVMWindowsManifest;LLVMPasses;MLIRInferTypeOpInterface;LLVMipo;MLIRToLLVMIRTranslationRegistration;ConcretelangServerLib;LLVMSelectionDAG;MLIRBytecodeReader;LLVMJITLink;LLVMOrcShared;LLVMFuzzMutate;MLIRNVVMToLLVMIRTranslation;MLIRSupport;LLVMDebugInfoPDB;LLVMX86Info;LLVMRuntimeDyld;MLIRMaskingOpInterface;MLIRDestinationStyleOpInterface;LLVMDWARFLinkerParallel;LLVMBitReader;LLVMX86TargetMCA;LLVMDemangle;LLVMWindowsDriver;MLIRTransformUtils;LLVMAsmPrinter;LLVMFileCheck;LLVMCore;LLVMOrcTargetProcess;LLVMProfileData;concrete_optimizer;RTDialectAnalysis;MLIRSPIRVBinaryUtils;FHEDialectAnalysis;LLVMInterfaceStub;LLVMDWP;LLVMX86AsmParser;FHEDialectTransforms;LLVMTarget;MLIRCAPIRegisterEverything;LLVMFuzzerCLI;MLIRPass;MLIRCastInterfaces;MLIRTargetLLVMIRImport;LLVMVectorize;LLVMDebugInfoDWARF;LLVMInstCombine;MLIRControlFlowInterfaces;TFHEDialectTransforms;MLIRRewrite;MLIRTargetCpp;MLIRLLVMIRToLLVMTranslation;ConcretelangConversion;kj;LLVMLineEditor")
add_compile_options(-fexceptions -fsized-deallocation -fno-rtti)

target_link_libraries(concrete_test PRIVATE
		${CONCRETE_DYNAMIC_LIBS}
		dl tinfo
		-lpthread
		-Wl,--start-group
		${CONCRETE_STATIC_LIBS}
		-Wl,--end-group
)

# Success
#target_link_libraries(concrete_test PRIVATE
#			${CONCRETE_DYNAMIC_LIBS}
#			-lpthread
#			dl tinfo
#			${dialect_libs}
#			${conversion_libs}
#		MLIRTransforms
#		ConcretelangSupport
#		ConcretelangTransforms
#		MLIRIR
#		MLIRLLVMIRTransforms
#		MLIRLLVMToLLVMIRTranslation
#		${CONCRETE_STATIC_LIBS}
#		LLVMTableGen
#	 )
get_target_property(all_link_libs concrete_test LINK_LIBRARIES)
message(STATUS "all_link_libs=${all_link_libs}")
#####
#
# 这里追加新的Unit Test
#
#####
#gtest register
include(GoogleTest)
gtest_discover_tests(
	seal_test phantom_test spatialfhe_test concrete_test
)